#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Data.Repository
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Relationships")]
	public partial class RelationshipsDatabase : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertArtist(Data.DomainObjects.Artist instance);
    partial void UpdateArtist(Data.DomainObjects.Artist instance);
    partial void DeleteArtist(Data.DomainObjects.Artist instance);
    partial void InsertRestaurant(Data.DomainObjects.Restaurant instance);
    partial void UpdateRestaurant(Data.DomainObjects.Restaurant instance);
    partial void DeleteRestaurant(Data.DomainObjects.Restaurant instance);
    partial void InsertFavorites(Data.DomainObjects.Favorites instance);
    partial void UpdateFavorites(Data.DomainObjects.Favorites instance);
    partial void DeleteFavorites(Data.DomainObjects.Favorites instance);
    partial void InsertFlowers(Data.DomainObjects.Flowers instance);
    partial void UpdateFlowers(Data.DomainObjects.Flowers instance);
    partial void DeleteFlowers(Data.DomainObjects.Flowers instance);
    partial void InsertGenericFavorite(Data.DomainObjects.GenericFavorite instance);
    partial void UpdateGenericFavorite(Data.DomainObjects.GenericFavorite instance);
    partial void DeleteGenericFavorite(Data.DomainObjects.GenericFavorite instance);
    partial void InsertGift(Data.DomainObjects.Gift instance);
    partial void UpdateGift(Data.DomainObjects.Gift instance);
    partial void DeleteGift(Data.DomainObjects.Gift instance);
    partial void InsertRelationship(Data.DomainObjects.Relationship instance);
    partial void UpdateRelationship(Data.DomainObjects.Relationship instance);
    partial void DeleteRelationship(Data.DomainObjects.Relationship instance);
    #endregion
		
		public RelationshipsDatabase() : 
				base(global::Data.Properties.Settings.Default.RelationshipsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public RelationshipsDatabase(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RelationshipsDatabase(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RelationshipsDatabase(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RelationshipsDatabase(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Data.DomainObjects.Artist> Artists
		{
			get
			{
				return this.GetTable<Data.DomainObjects.Artist>();
			}
		}
		
		public System.Data.Linq.Table<Data.DomainObjects.Restaurant> Restaurants
		{
			get
			{
				return this.GetTable<Data.DomainObjects.Restaurant>();
			}
		}
		
		public System.Data.Linq.Table<Data.DomainObjects.Favorites> Favorites
		{
			get
			{
				return this.GetTable<Data.DomainObjects.Favorites>();
			}
		}
		
		public System.Data.Linq.Table<Data.DomainObjects.Flowers> Flowers
		{
			get
			{
				return this.GetTable<Data.DomainObjects.Flowers>();
			}
		}
		
		public System.Data.Linq.Table<Data.DomainObjects.GenericFavorite> GenericFavorites
		{
			get
			{
				return this.GetTable<Data.DomainObjects.GenericFavorite>();
			}
		}
		
		public System.Data.Linq.Table<Data.DomainObjects.Gift> Gifts
		{
			get
			{
				return this.GetTable<Data.DomainObjects.Gift>();
			}
		}
		
		public System.Data.Linq.Table<Data.DomainObjects.Relationship> Relationships
		{
			get
			{
				return this.GetTable<Data.DomainObjects.Relationship>();
			}
		}
	}
}
namespace Data.DomainObjects
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Artist")]
	public partial class Artist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private int _AttendedCount;
		
		private string _Notes;
		
		private System.Guid _RelationshipId;
		
		private EntityRef<Relationship> _Relationship;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAttendedCountChanging(int value);
    partial void OnAttendedCountChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnRelationshipIdChanging(System.Guid value);
    partial void OnRelationshipIdChanged();
    #endregion
		
		public Artist()
		{
			this._Relationship = default(EntityRef<Relationship>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ArtistId", Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendedCount", DbType="Int NOT NULL")]
		public int AttendedCount
		{
			get
			{
				return this._AttendedCount;
			}
			set
			{
				if ((this._AttendedCount != value))
				{
					this.OnAttendedCountChanging(value);
					this.SendPropertyChanging();
					this._AttendedCount = value;
					this.SendPropertyChanged("AttendedCount");
					this.OnAttendedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(1000)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fkRelationshipId", Storage="_RelationshipId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RelationshipId
		{
			get
			{
				return this._RelationshipId;
			}
			set
			{
				if ((this._RelationshipId != value))
				{
					this.OnRelationshipIdChanging(value);
					this.SendPropertyChanging();
					this._RelationshipId = value;
					this.SendPropertyChanged("RelationshipId");
					this.OnRelationshipIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relationship_Artist", Storage="_Relationship", ThisKey="RelationshipId", OtherKey="Id", IsForeignKey=true)]
		public Relationship Relationship
		{
			get
			{
				return this._Relationship.Entity;
			}
			set
			{
				Relationship previousValue = this._Relationship.Entity;
				if (((previousValue != value) 
							|| (this._Relationship.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Relationship.Entity = null;
						previousValue.Artists.Remove(this);
					}
					this._Relationship.Entity = value;
					if ((value != null))
					{
						value.Artists.Add(this);
						this._RelationshipId = value.Id;
					}
					else
					{
						this._RelationshipId = default(System.Guid);
					}
					this.SendPropertyChanged("Relationship");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Restaurant")]
	public partial class Restaurant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private string _FoodType;
		
		private System.Nullable<System.DateTime> _DateAttended;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<double> _Rating;
		
		private bool _Bar;
		
		private System.Guid _RelationshipId;
		
		private EntityRef<Relationship> _Relationship;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFoodTypeChanging(string value);
    partial void OnFoodTypeChanged();
    partial void OnDateAttendedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAttendedChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnRatingChanging(System.Nullable<double> value);
    partial void OnRatingChanged();
    partial void OnBarChanging(bool value);
    partial void OnBarChanged();
    partial void OnRelationshipIdChanging(System.Guid value);
    partial void OnRelationshipIdChanged();
    #endregion
		
		public Restaurant()
		{
			this._Relationship = default(EntityRef<Relationship>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="RestaurantId", Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodType", DbType="VarChar(100)")]
		public string FoodType
		{
			get
			{
				return this._FoodType;
			}
			set
			{
				if ((this._FoodType != value))
				{
					this.OnFoodTypeChanging(value);
					this.SendPropertyChanging();
					this._FoodType = value;
					this.SendPropertyChanged("FoodType");
					this.OnFoodTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAttended", DbType="Date")]
		public System.Nullable<System.DateTime> DateAttended
		{
			get
			{
				return this._DateAttended;
			}
			set
			{
				if ((this._DateAttended != value))
				{
					this.OnDateAttendedChanging(value);
					this.SendPropertyChanging();
					this._DateAttended = value;
					this.SendPropertyChanged("DateAttended");
					this.OnDateAttendedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Float")]
		public System.Nullable<double> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bar", DbType="Bit NOT NULL")]
		public bool Bar
		{
			get
			{
				return this._Bar;
			}
			set
			{
				if ((this._Bar != value))
				{
					this.OnBarChanging(value);
					this.SendPropertyChanging();
					this._Bar = value;
					this.SendPropertyChanged("Bar");
					this.OnBarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fkRelationshipId", Storage="_RelationshipId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RelationshipId
		{
			get
			{
				return this._RelationshipId;
			}
			set
			{
				if ((this._RelationshipId != value))
				{
					this.OnRelationshipIdChanging(value);
					this.SendPropertyChanging();
					this._RelationshipId = value;
					this.SendPropertyChanged("RelationshipId");
					this.OnRelationshipIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relationship_Restaurant", Storage="_Relationship", ThisKey="RelationshipId", OtherKey="Id", IsForeignKey=true)]
		public Relationship Relationship
		{
			get
			{
				return this._Relationship.Entity;
			}
			set
			{
				Relationship previousValue = this._Relationship.Entity;
				if (((previousValue != value) 
							|| (this._Relationship.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Relationship.Entity = null;
						previousValue.Restaurants.Remove(this);
					}
					this._Relationship.Entity = value;
					if ((value != null))
					{
						value.Restaurants.Add(this);
						this._RelationshipId = value.Id;
					}
					else
					{
						this._RelationshipId = default(System.Guid);
					}
					this.SendPropertyChanged("Relationship");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Favorites")]
	public partial class Favorites : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Color;
		
		private string _Flower;
		
		private string _Movie;
		
		private string _Band;
		
		private System.Guid _RelationshipId;
		
		private EntityRef<Relationship> _Relationship;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnFlowerChanging(string value);
    partial void OnFlowerChanged();
    partial void OnMovieChanging(string value);
    partial void OnMovieChanged();
    partial void OnBandChanging(string value);
    partial void OnBandChanged();
    partial void OnRelationshipIdChanging(System.Guid value);
    partial void OnRelationshipIdChanged();
    #endregion
		
		public Favorites()
		{
			this._Relationship = default(EntityRef<Relationship>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="FavoriteId", Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="VarChar(100)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flower", DbType="VarChar(100)")]
		public string Flower
		{
			get
			{
				return this._Flower;
			}
			set
			{
				if ((this._Flower != value))
				{
					this.OnFlowerChanging(value);
					this.SendPropertyChanging();
					this._Flower = value;
					this.SendPropertyChanged("Flower");
					this.OnFlowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Movie", DbType="VarChar(100)")]
		public string Movie
		{
			get
			{
				return this._Movie;
			}
			set
			{
				if ((this._Movie != value))
				{
					this.OnMovieChanging(value);
					this.SendPropertyChanging();
					this._Movie = value;
					this.SendPropertyChanged("Movie");
					this.OnMovieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Band", DbType="VarChar(100)")]
		public string Band
		{
			get
			{
				return this._Band;
			}
			set
			{
				if ((this._Band != value))
				{
					this.OnBandChanging(value);
					this.SendPropertyChanging();
					this._Band = value;
					this.SendPropertyChanged("Band");
					this.OnBandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fkRelationshipId", Storage="_RelationshipId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RelationshipId
		{
			get
			{
				return this._RelationshipId;
			}
			set
			{
				if ((this._RelationshipId != value))
				{
					this.OnRelationshipIdChanging(value);
					this.SendPropertyChanging();
					this._RelationshipId = value;
					this.SendPropertyChanged("RelationshipId");
					this.OnRelationshipIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relationship_Favorites", Storage="_Relationship", ThisKey="RelationshipId", OtherKey="Id", IsForeignKey=true)]
		public Relationship Relationship
		{
			get
			{
				return this._Relationship.Entity;
			}
			set
			{
				Relationship previousValue = this._Relationship.Entity;
				if (((previousValue != value) 
							|| (this._Relationship.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Relationship.Entity = null;
						previousValue.Favorites.Remove(this);
					}
					this._Relationship.Entity = value;
					if ((value != null))
					{
						value.Favorites.Add(this);
						this._RelationshipId = value.Id;
					}
					else
					{
						this._RelationshipId = default(System.Guid);
					}
					this.SendPropertyChanged("Relationship");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Flowers")]
	public partial class Flowers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _ArrangementName;
		
		private string _Vendor;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<System.DateTime> _DateBought;
		
		private System.Nullable<System.DateTime> _DateReceived;
		
		private bool _Delivered;
		
		private string _Notes;
		
		private System.Guid _RelationshipId;
		
		private EntityRef<Relationship> _Relationship;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnArrangementNameChanging(string value);
    partial void OnArrangementNameChanged();
    partial void OnVendorChanging(string value);
    partial void OnVendorChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnDateBoughtChanging(System.Nullable<System.DateTime> value);
    partial void OnDateBoughtChanged();
    partial void OnDateReceivedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateReceivedChanged();
    partial void OnDeliveredChanging(bool value);
    partial void OnDeliveredChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnRelationshipIdChanging(System.Guid value);
    partial void OnRelationshipIdChanged();
    #endregion
		
		public Flowers()
		{
			this._Relationship = default(EntityRef<Relationship>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="FlowerId", Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrangementName", DbType="VarChar(100)")]
		public string ArrangementName
		{
			get
			{
				return this._ArrangementName;
			}
			set
			{
				if ((this._ArrangementName != value))
				{
					this.OnArrangementNameChanging(value);
					this.SendPropertyChanging();
					this._ArrangementName = value;
					this.SendPropertyChanged("ArrangementName");
					this.OnArrangementNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vendor", DbType="VarChar(100)")]
		public string Vendor
		{
			get
			{
				return this._Vendor;
			}
			set
			{
				if ((this._Vendor != value))
				{
					this.OnVendorChanging(value);
					this.SendPropertyChanging();
					this._Vendor = value;
					this.SendPropertyChanged("Vendor");
					this.OnVendorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBought", DbType="Date")]
		public System.Nullable<System.DateTime> DateBought
		{
			get
			{
				return this._DateBought;
			}
			set
			{
				if ((this._DateBought != value))
				{
					this.OnDateBoughtChanging(value);
					this.SendPropertyChanging();
					this._DateBought = value;
					this.SendPropertyChanged("DateBought");
					this.OnDateBoughtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateReceived", DbType="Date")]
		public System.Nullable<System.DateTime> DateReceived
		{
			get
			{
				return this._DateReceived;
			}
			set
			{
				if ((this._DateReceived != value))
				{
					this.OnDateReceivedChanging(value);
					this.SendPropertyChanging();
					this._DateReceived = value;
					this.SendPropertyChanged("DateReceived");
					this.OnDateReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Delivered", DbType="Bit NOT NULL")]
		public bool Delivered
		{
			get
			{
				return this._Delivered;
			}
			set
			{
				if ((this._Delivered != value))
				{
					this.OnDeliveredChanging(value);
					this.SendPropertyChanging();
					this._Delivered = value;
					this.SendPropertyChanged("Delivered");
					this.OnDeliveredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(1000)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fkRelationshipId", Storage="_RelationshipId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RelationshipId
		{
			get
			{
				return this._RelationshipId;
			}
			set
			{
				if ((this._RelationshipId != value))
				{
					this.OnRelationshipIdChanging(value);
					this.SendPropertyChanging();
					this._RelationshipId = value;
					this.SendPropertyChanged("RelationshipId");
					this.OnRelationshipIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relationship_Flowers", Storage="_Relationship", ThisKey="RelationshipId", OtherKey="Id", IsForeignKey=true)]
		public Relationship Relationship
		{
			get
			{
				return this._Relationship.Entity;
			}
			set
			{
				Relationship previousValue = this._Relationship.Entity;
				if (((previousValue != value) 
							|| (this._Relationship.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Relationship.Entity = null;
						previousValue.Flowers.Remove(this);
					}
					this._Relationship.Entity = value;
					if ((value != null))
					{
						value.Flowers.Add(this);
						this._RelationshipId = value.Id;
					}
					else
					{
						this._RelationshipId = default(System.Guid);
					}
					this.SendPropertyChanged("Relationship");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GenericFavorite")]
	public partial class GenericFavorite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private string _Value;
		
		private System.Guid _RelationshipId;
		
		private EntityRef<Relationship> _Relationship;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnRelationshipIdChanging(System.Guid value);
    partial void OnRelationshipIdChanged();
    #endregion
		
		public GenericFavorite()
		{
			this._Relationship = default(EntityRef<Relationship>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="GenericFavoriteId", Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(500)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fkRelationshipId", Storage="_RelationshipId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RelationshipId
		{
			get
			{
				return this._RelationshipId;
			}
			set
			{
				if ((this._RelationshipId != value))
				{
					this.OnRelationshipIdChanging(value);
					this.SendPropertyChanging();
					this._RelationshipId = value;
					this.SendPropertyChanged("RelationshipId");
					this.OnRelationshipIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relationship_GenericFavorite", Storage="_Relationship", ThisKey="RelationshipId", OtherKey="Id", IsForeignKey=true)]
		public Relationship Relationship
		{
			get
			{
				return this._Relationship.Entity;
			}
			set
			{
				Relationship previousValue = this._Relationship.Entity;
				if (((previousValue != value) 
							|| (this._Relationship.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Relationship.Entity = null;
						previousValue.GenericFavorites.Remove(this);
					}
					this._Relationship.Entity = value;
					if ((value != null))
					{
						value.GenericFavorites.Add(this);
						this._RelationshipId = value.Id;
					}
					else
					{
						this._RelationshipId = default(System.Guid);
					}
					this.SendPropertyChanged("Relationship");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gift")]
	public partial class Gift : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _DateBought;
		
		private System.Nullable<System.DateTime> _DateGiven;
		
		private System.Nullable<decimal> _Price;
		
		private string _Occasion;
		
		private string _OccasionOther;
		
		private System.Guid _RelationshipId;
		
		private EntityRef<Relationship> _Relationship;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateBoughtChanging(System.Nullable<System.DateTime> value);
    partial void OnDateBoughtChanged();
    partial void OnDateGivenChanging(System.Nullable<System.DateTime> value);
    partial void OnDateGivenChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnOccasionChanging(string value);
    partial void OnOccasionChanged();
    partial void OnOccasionOtherChanging(string value);
    partial void OnOccasionOtherChanged();
    partial void OnRelationshipIdChanging(System.Guid value);
    partial void OnRelationshipIdChanged();
    #endregion
		
		public Gift()
		{
			this._Relationship = default(EntityRef<Relationship>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="GiftId", Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBought", DbType="Date")]
		public System.Nullable<System.DateTime> DateBought
		{
			get
			{
				return this._DateBought;
			}
			set
			{
				if ((this._DateBought != value))
				{
					this.OnDateBoughtChanging(value);
					this.SendPropertyChanging();
					this._DateBought = value;
					this.SendPropertyChanged("DateBought");
					this.OnDateBoughtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateGiven", DbType="Date")]
		public System.Nullable<System.DateTime> DateGiven
		{
			get
			{
				return this._DateGiven;
			}
			set
			{
				if ((this._DateGiven != value))
				{
					this.OnDateGivenChanging(value);
					this.SendPropertyChanging();
					this._DateGiven = value;
					this.SendPropertyChanged("DateGiven");
					this.OnDateGivenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Occasion", DbType="VarChar(100)")]
		public string Occasion
		{
			get
			{
				return this._Occasion;
			}
			set
			{
				if ((this._Occasion != value))
				{
					this.OnOccasionChanging(value);
					this.SendPropertyChanging();
					this._Occasion = value;
					this.SendPropertyChanged("Occasion");
					this.OnOccasionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccasionOther", DbType="VarChar(100)")]
		public string OccasionOther
		{
			get
			{
				return this._OccasionOther;
			}
			set
			{
				if ((this._OccasionOther != value))
				{
					this.OnOccasionOtherChanging(value);
					this.SendPropertyChanging();
					this._OccasionOther = value;
					this.SendPropertyChanged("OccasionOther");
					this.OnOccasionOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fkRelationshipId", Storage="_RelationshipId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RelationshipId
		{
			get
			{
				return this._RelationshipId;
			}
			set
			{
				if ((this._RelationshipId != value))
				{
					this.OnRelationshipIdChanging(value);
					this.SendPropertyChanging();
					this._RelationshipId = value;
					this.SendPropertyChanged("RelationshipId");
					this.OnRelationshipIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relationship_Gift", Storage="_Relationship", ThisKey="RelationshipId", OtherKey="Id", IsForeignKey=true)]
		public Relationship Relationship
		{
			get
			{
				return this._Relationship.Entity;
			}
			set
			{
				Relationship previousValue = this._Relationship.Entity;
				if (((previousValue != value) 
							|| (this._Relationship.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Relationship.Entity = null;
						previousValue.Gifts.Remove(this);
					}
					this._Relationship.Entity = value;
					if ((value != null))
					{
						value.Gifts.Add(this);
						this._RelationshipId = value.Id;
					}
					else
					{
						this._RelationshipId = default(System.Guid);
					}
					this.SendPropertyChanged("Relationship");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Relationship")]
	public partial class Relationship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private string _NickName;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private System.Nullable<System.DateTime> _Anniversary;
		
		private System.Nullable<System.DateTime> _FirstDate;
		
		private System.Nullable<System.DateTime> _FirstKiss;
		
		private System.Nullable<System.DateTime> _MeetingDate;
		
		private bool _Married;
		
		private System.Nullable<System.DateTime> _WeddingAnniversary;
		
		private System.DateTime _CreatedDate;
		
		private bool _Deleted;
		
		private System.Nullable<System.DateTime> _DeletedDate;
		
		private bool _MarriedToYou;
		
		private EntitySet<Artist> _Artists;
		
		private EntitySet<Restaurant> _Restaurants;
		
		private EntitySet<Favorites> _Favorites;
		
		private EntitySet<Flowers> _Flowers;
		
		private EntitySet<GenericFavorite> _GenericFavorites;
		
		private EntitySet<Gift> _Gifts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNickNameChanging(string value);
    partial void OnNickNameChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    partial void OnAnniversaryChanging(System.Nullable<System.DateTime> value);
    partial void OnAnniversaryChanged();
    partial void OnFirstDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstDateChanged();
    partial void OnFirstKissChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstKissChanged();
    partial void OnMeetingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMeetingDateChanged();
    partial void OnMarriedChanging(bool value);
    partial void OnMarriedChanged();
    partial void OnWeddingAnniversaryChanging(System.Nullable<System.DateTime> value);
    partial void OnWeddingAnniversaryChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnDeletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedDateChanged();
    partial void OnMarriedToYouChanging(bool value);
    partial void OnMarriedToYouChanged();
    #endregion
		
		public Relationship()
		{
			this._Artists = new EntitySet<Artist>(new Action<Artist>(this.attach_Artists), new Action<Artist>(this.detach_Artists));
			this._Restaurants = new EntitySet<Restaurant>(new Action<Restaurant>(this.attach_Restaurants), new Action<Restaurant>(this.detach_Restaurants));
			this._Favorites = new EntitySet<Favorites>(new Action<Favorites>(this.attach_Favorites), new Action<Favorites>(this.detach_Favorites));
			this._Flowers = new EntitySet<Flowers>(new Action<Flowers>(this.attach_Flowers), new Action<Flowers>(this.detach_Flowers));
			this._GenericFavorites = new EntitySet<GenericFavorite>(new Action<GenericFavorite>(this.attach_GenericFavorites), new Action<GenericFavorite>(this.detach_GenericFavorites));
			this._Gifts = new EntitySet<Gift>(new Action<Gift>(this.attach_Gifts), new Action<Gift>(this.detach_Gifts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="RelationshipId", Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NickName", DbType="VarChar(100)")]
		public string NickName
		{
			get
			{
				return this._NickName;
			}
			set
			{
				if ((this._NickName != value))
				{
					this.OnNickNameChanging(value);
					this.SendPropertyChanging();
					this._NickName = value;
					this.SendPropertyChanged("NickName");
					this.OnNickNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="Date")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anniversary", DbType="Date")]
		public System.Nullable<System.DateTime> Anniversary
		{
			get
			{
				return this._Anniversary;
			}
			set
			{
				if ((this._Anniversary != value))
				{
					this.OnAnniversaryChanging(value);
					this.SendPropertyChanging();
					this._Anniversary = value;
					this.SendPropertyChanged("Anniversary");
					this.OnAnniversaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstDate", DbType="Date")]
		public System.Nullable<System.DateTime> FirstDate
		{
			get
			{
				return this._FirstDate;
			}
			set
			{
				if ((this._FirstDate != value))
				{
					this.OnFirstDateChanging(value);
					this.SendPropertyChanging();
					this._FirstDate = value;
					this.SendPropertyChanged("FirstDate");
					this.OnFirstDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstKiss", DbType="Date")]
		public System.Nullable<System.DateTime> FirstKiss
		{
			get
			{
				return this._FirstKiss;
			}
			set
			{
				if ((this._FirstKiss != value))
				{
					this.OnFirstKissChanging(value);
					this.SendPropertyChanging();
					this._FirstKiss = value;
					this.SendPropertyChanged("FirstKiss");
					this.OnFirstKissChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingDate", DbType="Date")]
		public System.Nullable<System.DateTime> MeetingDate
		{
			get
			{
				return this._MeetingDate;
			}
			set
			{
				if ((this._MeetingDate != value))
				{
					this.OnMeetingDateChanging(value);
					this.SendPropertyChanging();
					this._MeetingDate = value;
					this.SendPropertyChanged("MeetingDate");
					this.OnMeetingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Married", DbType="Bit NOT NULL")]
		public bool Married
		{
			get
			{
				return this._Married;
			}
			set
			{
				if ((this._Married != value))
				{
					this.OnMarriedChanging(value);
					this.SendPropertyChanging();
					this._Married = value;
					this.SendPropertyChanged("Married");
					this.OnMarriedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeddingAnniversary", DbType="Date")]
		public System.Nullable<System.DateTime> WeddingAnniversary
		{
			get
			{
				return this._WeddingAnniversary;
			}
			set
			{
				if ((this._WeddingAnniversary != value))
				{
					this.OnWeddingAnniversaryChanging(value);
					this.SendPropertyChanging();
					this._WeddingAnniversary = value;
					this.SendPropertyChanged("WeddingAnniversary");
					this.OnWeddingAnniversaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedDate", DbType="Date")]
		public System.Nullable<System.DateTime> DeletedDate
		{
			get
			{
				return this._DeletedDate;
			}
			set
			{
				if ((this._DeletedDate != value))
				{
					this.OnDeletedDateChanging(value);
					this.SendPropertyChanging();
					this._DeletedDate = value;
					this.SendPropertyChanged("DeletedDate");
					this.OnDeletedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarriedToYou", DbType="Bit NOT NULL")]
		public bool MarriedToYou
		{
			get
			{
				return this._MarriedToYou;
			}
			set
			{
				if ((this._MarriedToYou != value))
				{
					this.OnMarriedToYouChanging(value);
					this.SendPropertyChanging();
					this._MarriedToYou = value;
					this.SendPropertyChanged("MarriedToYou");
					this.OnMarriedToYouChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relationship_Artist", Storage="_Artists", ThisKey="Id", OtherKey="RelationshipId")]
		public EntitySet<Artist> Artists
		{
			get
			{
				return this._Artists;
			}
			set
			{
				this._Artists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relationship_Restaurant", Storage="_Restaurants", ThisKey="Id", OtherKey="RelationshipId")]
		public EntitySet<Restaurant> Restaurants
		{
			get
			{
				return this._Restaurants;
			}
			set
			{
				this._Restaurants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relationship_Favorites", Storage="_Favorites", ThisKey="Id", OtherKey="RelationshipId")]
		public EntitySet<Favorites> Favorites
		{
			get
			{
				return this._Favorites;
			}
			set
			{
				this._Favorites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relationship_Flowers", Storage="_Flowers", ThisKey="Id", OtherKey="RelationshipId")]
		public EntitySet<Flowers> Flowers
		{
			get
			{
				return this._Flowers;
			}
			set
			{
				this._Flowers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relationship_GenericFavorite", Storage="_GenericFavorites", ThisKey="Id", OtherKey="RelationshipId")]
		public EntitySet<GenericFavorite> GenericFavorites
		{
			get
			{
				return this._GenericFavorites;
			}
			set
			{
				this._GenericFavorites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relationship_Gift", Storage="_Gifts", ThisKey="Id", OtherKey="RelationshipId")]
		public EntitySet<Gift> Gifts
		{
			get
			{
				return this._Gifts;
			}
			set
			{
				this._Gifts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Artists(Artist entity)
		{
			this.SendPropertyChanging();
			entity.Relationship = this;
		}
		
		private void detach_Artists(Artist entity)
		{
			this.SendPropertyChanging();
			entity.Relationship = null;
		}
		
		private void attach_Restaurants(Restaurant entity)
		{
			this.SendPropertyChanging();
			entity.Relationship = this;
		}
		
		private void detach_Restaurants(Restaurant entity)
		{
			this.SendPropertyChanging();
			entity.Relationship = null;
		}
		
		private void attach_Favorites(Favorites entity)
		{
			this.SendPropertyChanging();
			entity.Relationship = this;
		}
		
		private void detach_Favorites(Favorites entity)
		{
			this.SendPropertyChanging();
			entity.Relationship = null;
		}
		
		private void attach_Flowers(Flowers entity)
		{
			this.SendPropertyChanging();
			entity.Relationship = this;
		}
		
		private void detach_Flowers(Flowers entity)
		{
			this.SendPropertyChanging();
			entity.Relationship = null;
		}
		
		private void attach_GenericFavorites(GenericFavorite entity)
		{
			this.SendPropertyChanging();
			entity.Relationship = this;
		}
		
		private void detach_GenericFavorites(GenericFavorite entity)
		{
			this.SendPropertyChanging();
			entity.Relationship = null;
		}
		
		private void attach_Gifts(Gift entity)
		{
			this.SendPropertyChanging();
			entity.Relationship = this;
		}
		
		private void detach_Gifts(Gift entity)
		{
			this.SendPropertyChanging();
			entity.Relationship = null;
		}
	}
}
#pragma warning restore 1591
